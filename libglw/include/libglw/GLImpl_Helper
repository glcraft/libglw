#include <memory>
#if __cplusplus<201402L
namespace _std
{
    template<typename T, typename... Args>
    std::unique_ptr<T> make_unique(Args&&... args) {
        return std::unique_ptr<T>(new T(std::forward<Args>(args)...));
    }
}
#else
namespace _std
{
    template <typename T>
    using make_unique=std::make_unique<T>;
}
#endif